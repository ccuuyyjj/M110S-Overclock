diff -urN Kernel_Original/arch/arm/mach-s5pv210/clock.c Kernel/arch/arm/mach-s5pv210/clock.c
--- Kernel_Original/arch/arm/mach-s5pv210/clock.c	2011-01-07 14:48:18.000000000 +0900
+++ Kernel/arch/arm/mach-s5pv210/clock.c	2011-01-21 17:19:14.848575156 +0900
@@ -122,12 +122,11 @@
 
 
 struct S5PC110_clk_info clk_info[] = {
-#if USE_1DOT2GHZ
 {
 	// APLL:1200,ARMCLK:1200,HCLK_MSYS:200,MPLL:667,HCLK_DSYS:166,HCLK_PSYS:133,PCLK_MSYS:100,PCLK_DSYS:83,PCLK_PSYS:66
-	.armclk		=	1200* MHZ,
-	.apllout	=	1200* MHZ,
-	.apll_mps	=	((150<<16)|(3<<8)|1),
+	.armclk		=	1350* MHZ,
+	.apllout	=	1350* MHZ,
+	.apll_mps	=	((350<<16)|(6<<8)|1),
 	.msys_div0	=	(0|(5<<4)|(5<<8)|(1<<12)),
 	.mpllout	=	667* MHZ,
 	.mpll_mps	=	((667<<16)|(12<<8)|(1)),
@@ -135,12 +134,12 @@
 	.div2val	=	((3<<0)|(3<<4)|(3<<8)),
 	.dmc0_div6 	=	(3<<28),
 },
-#endif// A extra entry for 1200MHZ level 
+// A extra entry for 1350MHZ level 
 {
 	// APLL:1000,ARMCLK:1000,HCLK_MSYS:200,MPLL:667,HCLK_DSYS:166,HCLK_PSYS:133,PCLK_MSYS:100,PCLK_DSYS:83,PCLK_PSYS:66
	.armclk		=	1000* MHZ,
	.apllout	=	1000* MHZ,
-	.apll_mps	=	((125<<16)|(3<<8)|1),
+	.apll_mps	=	((250<<16)|(6<<8)|1),
 	.msys_div0	=	(0|(4<<4)|(4<<8)|(1<<12)),
 	.mpllout	=	667* MHZ,
 	.mpll_mps	=	((667<<16)|(12<<8)|(1)),
@@ -152,7 +151,7 @@
 	// APLL:800,ARMCLK:800,HCLK_MSYS:200,MPLL:667,HCLK_DSYS:166,HCLK_PSYS:133,PCLK_MSYS:100,PCLK_DSYS:83,PCLK_PSYS:66
 	.armclk		=	800* MHZ,
 	.apllout	=	800* MHZ,
-	.apll_mps	=	((100<<16)|(3<<8)|1),
+	.apll_mps	=	((200<<16)|(6<<8)|1),
 	.msys_div0	=	(0|(3<<4)|(3<<8)|(1<<12)),
 	.mpllout	=	667* MHZ,
 	.mpll_mps	=	((667<<16)|(12<<8)|(1)),
@@ -164,7 +163,7 @@
 	// APLL:800,ARMCLK:400,HCLK_MSYS:200,MPLL:667,HCLK_DSYS:166,HCLK_PSYS:133,PCLK_MSYS:100,PCLK_DSYS:83,PCLK_PSYS:66
 	.armclk		=	400* MHZ,
 	.apllout	=	800* MHZ,
-	.apll_mps	=	((100<<16)|(3<<8)|1),
+	.apll_mps	=	((200<<16)|(6<<8)|1),
 	.msys_div0	=	(1|(3<<4)|(1<<8)|(1<<12)),
 	.mpllout	=	667* MHZ,
 	.mpll_mps	=	((667<<16)|(12<<8)|(1)),
@@ -176,7 +175,7 @@
 	// APLL:800,ARMCLK:200,HCLK_MSYS:200,MPLL:667,HCLK_DSYS:166,HCLK_PSYS:133,PCLK_MSYS:100,PCLK_DSYS:83,PCLK_PSYS:66
 	.armclk		=	200* MHZ,
 	.apllout	=	800* MHZ,
-	.apll_mps	=	((100<<16)|(3<<8)|1),
+	.apll_mps	=	((200<<16)|(6<<8)|1),
 	.msys_div0	=	(3|(3<<4)|(0<<8)|(1<<12)),
 	.mpllout	=	667* MHZ,
 	.mpll_mps	=	((667<<16)|(12<<8)|(1)),
@@ -188,7 +187,7 @@
 	// APLL:800,ARMCLK:100,HCLK_MSYS:100,MPLL:667,HCLK_DSYS:83,HCLK_PSYS:66,PCLK_MSYS:100,PCLK_DSYS:83,PCLK_PSYS:66
 	.armclk		=	100* MHZ,
 	.apllout	=	800* MHZ,
-	.apll_mps	=	((100<<16)|(3<<8)|1),
+	.apll_mps	=	((200<<16)|(6<<8)|1),
 	.msys_div0	=	(7|(3<<4)|(0<<8)|(0<<12)),
 	.mpllout	=	667* MHZ,
 	.mpll_mps	=	((667<<16)|(12<<8)|(1)),
diff -urN Kernel_Original/arch/arm/mach-s5pv210/cpu-freq.c Kernel/arch/arm/mach-s5pv210/cpu-freq.c
--- Kernel_Original/arch/arm/mach-s5pv210/cpu-freq.c	2010-10-30 20:36:27.000000000 +0900
+++ Kernel/arch/arm/mach-s5pv210/cpu-freq.c	2011-01-21 17:22:19.312631090 +0900
@@ -46,9 +46,9 @@
 unsigned int dvfs_change_direction;
 #define CLIP_LEVEL(a, b) (a > b ? b : a)
 
-unsigned int MAXFREQ_LEVEL_SUPPORTED = 4;
-unsigned int S5PC11X_MAXFREQLEVEL = 4;
-unsigned int S5PC11X_FREQ_TAB;
+unsigned int MAXFREQ_LEVEL_SUPPORTED = 6;
+unsigned int S5PC11X_MAXFREQLEVEL = 5;
+unsigned int S5PC11X_FREQ_TAB = 1;
 static spinlock_t g_dvfslock = SPIN_LOCK_UNLOCKED;
 static unsigned int s5pc11x_cpufreq_level = 3;
 unsigned int s5pc11x_cpufreq_index = 0;
@@ -72,7 +72,7 @@
 #if ENABLE_DVFS_LOCK_HIGH
 unsigned int g_dvfs_high_lock_token = 0;
 static DEFINE_MUTEX(dvfs_high_lock);
-unsigned int g_dvfs_high_lock_limit = 4;
+unsigned int g_dvfs_high_lock_limit = 5;
 unsigned int g_dvfslockval[NUMBER_OF_LOCKTOKEN];
 bool g_dvfs_fix_lock_limit = false; // global variable to avoid up frequency scaling 
 
@@ -83,11 +83,12 @@
 
 /* frequency */
 static struct cpufreq_frequency_table s5pc110_freq_table_1GHZ[] = {
-	{L0, 1000*1000},
-	{L1, 800*1000},
-	{L2, 400*1000},
-	{L3, 200*1000},
-	{L4, 100*1000},
+	{L0, 1350*1000},
+	{L1, 1000*1000},
+	{L2, 800*1000},
+	{L3, 400*1000},
+	{L4, 200*1000},
+	{L5, 100*1000},
 	{0, CPUFREQ_TABLE_END},
 };
 
@@ -98,6 +99,7 @@
         {3, 1},
         {4, 2},
         {5, 3},
+        {5, 4},
 };
 
 /* frequency */
@@ -134,6 +136,7 @@
 
 static unsigned int s5pc110_thres_table_1GHZ[][2] = {
       	 {55, 80},
+      	 {55, 80},
         {55, 90},
         {60, 90},
         {60, 90},
@@ -723,9 +726,9 @@
 		g_dvfs_high_lock_limit = 5;
 #else
 		S5PC11X_FREQ_TAB = 0;
-		S5PC11X_MAXFREQLEVEL = 4;
-		MAXFREQ_LEVEL_SUPPORTED = 5;
-		g_dvfs_high_lock_limit = 4;
+		S5PC11X_MAXFREQLEVEL = 5;
+		MAXFREQ_LEVEL_SUPPORTED = 6;
+		g_dvfs_high_lock_limit = 5;
 #endif
 	
 	printk("S5PC11X_FREQ_TAB=%d , S5PC11X_MAXFREQLEVEL=%d\n",S5PC11X_FREQ_TAB,S5PC11X_MAXFREQLEVEL);
diff -urN Kernel_Original/arch/arm/mach-s5pv210/max8998_consumer.c Kernel/arch/arm/mach-s5pv210/max8998_consumer.c
--- Kernel_Original/arch/arm/mach-s5pv210/max8998_consumer.c	2011-01-17 20:59:57.000000000 +0900
+++ Kernel/arch/arm/mach-s5pv210/max8998_consumer.c	2011-01-21 17:23:19.352505863 +0900
@@ -88,11 +88,12 @@
 static const unsigned int frequency_match_1GHZ[][4] = {
 /* frequency, Mathced VDD ARM voltage , Matched VDD INT*/
 #if 1
-        {1000000, 1250, 1100, 0},
-        {800000, 1200, 1100, 1},
-        {400000, 1050, 1100, 2},
-        {200000, 950, 1100, 4},
-        {100000, 950, 1000, 5},
+        {1350000, 1300, 1100, 0},
+        {1000000, 1200, 1100, 0},
+        {800000, 1100, 1100, 1},
+        {400000, 950, 1050, 2},
+        {200000, 850, 1050, 4},
+        {100000, 850, 1000, 5},
 #else //just for dvs test
         {1000000, 1250, 1100, 0},
         {800000, 1250, 1100, 1},
